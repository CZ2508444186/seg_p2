{"ast":null,"code":"var _jsxFileName = \"/Users/yuwenbo/Downloads/seg_p2/src/components/browseco.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './browseco.css'; // Ensure your CSS file path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genres = [\"Action\", \"Adventure\", \"Fantasy\", \"Mature\", \"Mystery\", \"Psychological\", \"Xianxia\", \"Wuxia\", \"Urban\", \"Xuanhuan\", \"Horror\", \"Harem\", \"Historical\", \"School Life\", \"Sci-fi\", \"Comedy\", \"Mecha\"];\nconst novels = [{\n  title: \"Epic of the Forsaken Hero\",\n  genres: [\"Fantasy\", \"Adventure\"],\n  cover: \"path/to/cover1.jpg\",\n  popularity: 90,\n  trending: 85,\n  lastUpdated: '2022-01-10'\n}, {\n  title: \"Mysteries of the East\",\n  genres: [\"Xianxia\", \"Mystery\"],\n  cover: \"path/to/cover2.jpg\",\n  popularity: 75,\n  trending: 95,\n  lastUpdated: '2024-03-15'\n}, {\n  title: \"School of Magic\",\n  genres: [\"Fantasy\", \"School Life\"],\n  cover: \"path/to/cover3.jpg\",\n  popularity: 88,\n  trending: 70,\n  lastUpdated: '2023-12-01'\n}\n// Add more novels as needed\n];\nconst Browseco = ({\n  heading\n}) => {\n  _s();\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [sortMethod, setSortMethod] = useState('popular');\n  const [filteredNovels, setFilteredNovels] = useState(novels);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const handleGenreClick = genre => {\n    const newSelectedGenres = selectedGenres.includes(genre) ? selectedGenres.filter(g => g !== genre) : selectedGenres.length < 2 ? [...selectedGenres, genre] : selectedGenres;\n    setSelectedGenres(newSelectedGenres);\n  };\n  useEffect(() => {\n    let results = novels.filter(novel => selectedGenres.every(genre => novel.genres.includes(genre)));\n    switch (sortMethod) {\n      case 'popular':\n        results.sort((a, b) => b.popularity - a.popularity);\n        break;\n      case 'trending':\n        results.sort((a, b) => b.trending - a.trending);\n        break;\n      case 'updated':\n        results.sort((a, b) => new Date(b.lastUpdated) - new Date(a.lastUpdated));\n        break;\n      default:\n        break;\n    }\n    setFilteredNovels(results);\n  }, [selectedGenres, sortMethod]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"browseco-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsSidebarOpen(!isSidebarOpen),\n      className: \"toggle-sidebar\",\n      children: isSidebarOpen ? 'Hide Genres' : 'Show Genres'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${isSidebarOpen ? '' : 'hidden'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Genres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `genre-button ${selectedGenres.includes(genre) ? 'active' : ''}`,\n        onClick: () => handleGenreClick(genre),\n        children: genre\n      }, genre, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Sort by:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: sortMethod,\n          onChange: e => setSortMethod(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"popular\",\n            children: \"Popular\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"trending\",\n            children: \"Trending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"updated\",\n            children: \"Last Updated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"novel-list\",\n      children: filteredNovels.map(novel => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"novel-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: novel.cover,\n          alt: novel.title,\n          className: \"novel-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: novel.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, novel.title, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n};\n_s(Browseco, \"PXJpR49+milCwZf8ItBwcUjjnZs=\");\n_c = Browseco;\nBrowseco.propTypes = {\n  heading: PropTypes.string\n};\nBrowseco.defaultProps = {\n  heading: 'Browse here'\n};\nexport default Browseco;\nvar _c;\n$RefreshReg$(_c, \"Browseco\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","jsxDEV","_jsxDEV","genres","novels","title","cover","popularity","trending","lastUpdated","Browseco","heading","_s","selectedGenres","setSelectedGenres","sortMethod","setSortMethod","filteredNovels","setFilteredNovels","isSidebarOpen","setIsSidebarOpen","handleGenreClick","genre","newSelectedGenres","includes","filter","g","length","results","novel","every","sort","a","b","Date","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","value","onChange","e","target","src","alt","_c","propTypes","string","defaultProps","$RefreshReg$"],"sources":["/Users/yuwenbo/Downloads/seg_p2/src/components/browseco.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './browseco.css';  // Ensure your CSS file path is correct\n\nconst genres = [\n  \"Action\", \"Adventure\", \"Fantasy\", \"Mature\", \"Mystery\", \"Psychological\",\n  \"Xianxia\", \"Wuxia\", \"Urban\", \"Xuanhuan\", \"Horror\", \"Harem\", \"Historical\",\n  \"School Life\", \"Sci-fi\", \"Comedy\", \"Mecha\"\n];\n\nconst novels = [\n  { title: \"Epic of the Forsaken Hero\", genres: [\"Fantasy\", \"Adventure\"], cover: \"path/to/cover1.jpg\", popularity: 90, trending: 85, lastUpdated: '2022-01-10' },\n  { title: \"Mysteries of the East\", genres: [\"Xianxia\", \"Mystery\"], cover: \"path/to/cover2.jpg\", popularity: 75, trending: 95, lastUpdated: '2024-03-15' },\n  { title: \"School of Magic\", genres: [\"Fantasy\", \"School Life\"], cover: \"path/to/cover3.jpg\", popularity: 88, trending: 70, lastUpdated: '2023-12-01' },\n  // Add more novels as needed\n];\n\nconst Browseco = ({ heading }) => {\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [sortMethod, setSortMethod] = useState('popular');\n  const [filteredNovels, setFilteredNovels] = useState(novels);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n\n  const handleGenreClick = (genre) => {\n    const newSelectedGenres = selectedGenres.includes(genre)\n        ? selectedGenres.filter(g => g !== genre)\n        : selectedGenres.length < 2 ? [...selectedGenres, genre] : selectedGenres;\n\n    setSelectedGenres(newSelectedGenres);\n  };\n\n  useEffect(() => {\n    let results = novels.filter(novel => selectedGenres.every(genre => novel.genres.includes(genre)));\n    switch (sortMethod) {\n      case 'popular':\n        results.sort((a, b) => b.popularity - a.popularity);\n        break;\n      case 'trending':\n        results.sort((a, b) => b.trending - a.trending);\n        break;\n      case 'updated':\n        results.sort((a, b) => new Date(b.lastUpdated) - new Date(a.lastUpdated));\n        break;\n      default:\n        break;\n    }\n    setFilteredNovels(results);\n  }, [selectedGenres, sortMethod]);\n\n  return (\n      <div className=\"browseco-container\">\n        <button onClick={() => setIsSidebarOpen(!isSidebarOpen)} className=\"toggle-sidebar\">\n          {isSidebarOpen ? 'Hide Genres' : 'Show Genres'}\n        </button>\n        <div className={`sidebar ${isSidebarOpen ? '' : 'hidden'}`}>\n          <h2>Genres</h2>\n          {genres.map(genre => (\n              <button key={genre}\n                      className={`genre-button ${selectedGenres.includes(genre) ? 'active' : ''}`}\n                      onClick={() => handleGenreClick(genre)}>\n                {genre}\n              </button>\n          ))}\n        </div>\n        <div className=\"sort-options\">\n          <h2>{heading}</h2>\n          <label>\n            Sort by:\n            <select value={sortMethod} onChange={(e) => setSortMethod(e.target.value)}>\n              <option value=\"popular\">Popular</option>\n              <option value=\"trending\">Trending</option>\n              <option value=\"updated\">Last Updated</option>\n            </select>\n          </label>\n        </div>\n        <div className=\"novel-list\">\n          {filteredNovels.map(novel => (\n              <div key={novel.title} className=\"novel-item\">\n                <img src={novel.cover} alt={novel.title} className=\"novel-cover\"/>\n                <h3>{novel.title}</h3>\n              </div>\n          ))}\n        </div>\n      </div>\n  );\n};\n\nBrowseco.propTypes = {\n  heading: PropTypes.string,\n};\n\nBrowseco.defaultProps = {\n  heading: 'Browse here',\n};\n\nexport default Browseco;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}